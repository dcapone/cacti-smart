#!/bin/sh
# Copyright (C) 2012  Glen Pitt-Pladdy
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 2
# of the License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
#
#
# See: https://www.pitt-pladdy.com/blog/_20091031-144604_0000_SMART_stats_on_Cacti_via_SNMP_/
#
# Version 20160226


# where to keep the files
STORE=/var/local/snmp
PREFIX=smart-
# what drive pattern to look for
DRIVEPATTERN=/dev/sd

driveSuffixList=""
explicitDriveListPath=""
extra=""


# update smart parameters from a list - if this is non-empty we will only check these devices, else we scan all $DRIVEPATTERN devices
#SMARTLIST="
#       /dev/disk/by-id/ata-ST3000DM001-...
#       /dev/disk/by-id/ata-ST3000DM001-...
#       /dev/disk/by-id/ata-ST3000DM001-...
#       /dev/disk/by-id/ata-ST3000DM001-...
#       /dev/disk/by-id/ata-ST3000DM001-...
#       /dev/disk/by-id/ata-ST3000DM001-...
#       /dev/disk/by-id/ata-Samsung_SSD_840_EVO_250GB_...
#       /dev/disk/by-id/ata-Samsung_SSD_840_EVO_250GB_...
#       /dev/disk/by-id/ata-Samsung_SSD_840_EVO_250GB_...
#"

while [ "$1" != "" ]; do

    extra=$1
    case $1 in
        -d | --drivepattern )
                shift
                DRIVEPATTERN=$1
                ;;
        -o | --outputfileprefix )
                shift
                PREFIX=$1
                ;;
        -l | --suffixlist )
                shift
                driveSuffixList=$1
                ;;
        -s | --datastore |
                shift
                STORE=$1
                ;;
        -e | --explicitdrivelistpath )
                shift
                explicitDriveListPath=$1
                ;;
        -h | --help )
                echo -e "usage: $0 --drivepattern <value> --outputfileprefix <value> --suffixlist <value> --datastore <value> --explicitdrivelistpath <path>\n\nwhere drivepattern value is a drive identifier prefix such as /dev/sd, \noutputfileprefix is a filename prefix to use for files output with this script, \ndatastore is a path to a directory to store SMART data,\nexplicitdrivelistpath is the path to a file containing a list of explicitly listed drive identifiers and extra parameters to smartctl, and\nsuffixlist is a comma seperated list of to complete drive identifiers a,b,c,d etc\n\nIf explicitdrivelistpath is specified, it will be used exclusively and autogenerated drive search will be disabled\n\nIf suffixlist is provided, suffixlist will be used to generate device list and autoscan will be disabled.\n\nIf neither is supplied, script automatically scans all device patterns from a-z attached to drive prefix" >&2
                exit 1
                ;;
        *)
                ;;
    esac
    shift
done


# update smart parameters
if [ -z "$explicitDriveListPath" ] && [ -z "$driveSuffixList" ]; then
        # Scan for all $DRIVEPATTERN devices
        list="a b c d e f g h i j k l m n o p q r s t u v w x y z"
        last=`ls ${DRIVEPATTERN}[a-z] ${DRIVEPATTERN}[a-z][a-z] 2>/dev/null | tail -n1`
        for dl1 in "" $list; do
                for dl2 in $list; do
                        drive=$DRIVEPATTERN$dl1$dl2
                        dev=`basename $drive`
                        if [ -b $drive ]; then
                                # capture SMART info
                                /usr/sbin/smartctl -n idle -a $drive >$STORE/TMP.$PREFIX$dev
                        else
                                # make an empty file to keep order
                                touch $STORE/TMP.$PREFIX$dev
                        fi
                        mv $STORE/TMP.$PREFIX$dev $STORE/$PREFIX$dev
                        [ $drive = $last ] && exit 0
                done
        done
elif [ -z "$explicitDriveListPath" ]; then

        for dl2 in $driveSuffixList; do
                drive=$DRIVEPATTERN$dl2
                dev=`basename $drive`
                if [ -b $drive ]; then
                        # capture SMART info
                        /usr/sbin/smartctl -n idle -a $drive >$STORE/TMP.$PREFIX$dev
                else
                        # make an empty file to keep order
                        touch $STORE/TMP.$PREFIX$dev
                fi
                mv $STORE/TMP.$PREFIX$dev $STORE/$PREFIX$dev
        done

elif [ -f $explicitDriveListPath ]; then

          counter=0
          while IFS= read -r var
          do
                IFS='|' read -r devfull smartctlOptions extraId <<< "$var"
                dev=`basename $devfull`
                dev=`printf "%03d-%s" $counter "$dev"`
                counter=$(($counter+1))
                if [ -b $devfull ]; then
                        # device exists
                        /usr/sbin/smartctl -n idle $smartctlOptions -a $devfull >$STORE/TMP.$PREFIX$dev$extraId
                else
                        # no device - create placeholder file
                        touch $STORE/TMP.$PREFIX$dev$extraId
                fi
                mv $STORE/TMP.$PREFIX$dev$extraId $STORE/$PREFIX$dev$extraId

          done < "$explicitDriveListPath"

else
        echo -e "usage: $0 --drivepattern <value> --outputfileprefix <value> --suffixlist <value> --explicitdrivelistpath <path>\n\nwhere drivepattern value is a drive identifier prefix such as /dev/sd, \noutputfileprefix is a filename prefix to use for files output with this script, \nexplicitdrivelistpath is the path to a file containing a list of explicitly listed drive identifiers and extra parameters to smartctl, and\nsuffixlist is a comma seperated list of to complete drive identifiers a,b,c,d etc\n\nIf explicitdrivelistpath is specified, it will be used exclusively and autogenerated drive search will be disabled\n\nIf suffixlist is provided, suffixlist will be used to generate device list and autoscan will be disabled.\n\nIf neither is supplied, script automatically scans all device patterns from a-z attached to drive prefix" >&2
        exit 1

fi
